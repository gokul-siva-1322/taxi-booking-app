import os
#a(0) b(1) c(2) d(3) e(4) f(5)
new_taxi_id = "T0"
new_user_id = "U0"
new_book_id = "B0"
taxis = []
users = []
books = []

class User:
    def __init__(self,user_id,password):
        self.user_id = user_id
        self.password = password
    def show_my_bookings(self):
        l = []
        for i in books:
            if(i.user_id == self.user_id):
                l.append("Taxi ID      : {}\nPick Up Point: {}\nDrop Point   : {}\nTrip Fair    : {}".format(i.taxi_id, i.pick_up_point, i.drop_point, i.paid))
        if(len(l)==0):
            print("\nNo Bookings Till Now")
        else:
            print(*l,sep = "\n")
        input()

class Taxi:
    last_tripcomplete_time = 0
    def __init__(self,taxi_id,password):
        self.currentposition = 0
        self.taxi_id = taxi_id
        self.password = password
        self.earnings = 0
    def isawailable(self,pickuptime,startposition,stopposition):
        if(self.last_tripcomplete_time+abs(self.currentposition - startposition) <= pickuptime):
            return True
        return False
    def show_my_bookings(self, flag):
        l = []
        for i in books:
            if(i.taxi_id == self.taxi_id):
                if(flag == "1"):
                    l.append("Taxi ID      : {}\nPick Up Point: {}\nDrop Point   : {}".format(i.taxi_id, i.pick_up_point, i.drop_point))
                else:
                    l.append("Taxi ID      : {}\nPick Up Point: {}\nDrop Point   : {}\nTrip Fair    : {}".format(i.taxi_id, i.pick_up_point, i.drop_point, i.paid))
        if(len(l)==0):
            print("\nNo Bookings Till Now") 
        else:
            print(*l,sep = "\n")
        input()

class Booking:
    def __init__(self,book_id,user_id,taxi_id,drop_point,pick_up_point,pick_up_time,paid):
        self.book_id = book_id
        self.user_id = user_id
        self.taxi_id = taxi_id
        self.drop_point = drop_point
        self.pick_up_time = pick_up_time
        self.pick_up_point = pick_up_point
        self.drop_time = pick_up_time+abs(self.pick_up_point-self.drop_point)
        self.paid = 0

taxis.append(Taxi("T0","1234"))
taxis.append(Taxi("T1","1234"))
taxis.append(Taxi("T2","1234"))
taxis.append(Taxi("T3","1234"))
users.append(User("U0","1234"))

# print(obj.isawailable(3,3,1))
# print(obj.isawailable(7,3,1))

def landing(check):
    while(True):
        os.system('cls')
        print("\tLanding Page")
        if(check == 0):
            arr = users
        else:
            arr = taxis
        ch = input("\n1.Sign Up\n2.Log In\n3.Exit\n\nEnter Your choice: ")
        if(ch == "1"):
            if(check == 0):
                global new_user_id
                new_user_id = "U"+str(int(new_user_id[1:])+1)
                new_id = new_user_id
            else:
                global new_taxi_id
                new_taxi_id = "T"+str(int(new_taxi_id[1:])+1)
                new_id = new_taxi_id

            signup(arr, new_id,check)
        elif(ch == "2"):
            login(arr)
        elif(ch == "3"):
            break
        else:
            input("\nInvalid choice\nPress Enter to Continue...")

def login(arr):
    os.system('cls')
    print("\tLogin Page")
    raw_id   = input("\nEnter Your ID : ").upper()
    ps = input("\nEnter Password: ")
    id = raw_id[1:]
    if(id.isdigit()):
        id = int(id)
        if(id < len(arr)):
            if ps == arr[id].password:
                if(raw_id[0] == "U"):
                    currentuser = arr[id]
                    userhome(currentuser)
                else:
                    currenttaxi = arr[id]
                    taxihome(currenttaxi)
            else:
                print("Invalid Password")
                input("Press Enter To Continue...")
        else:
            print("Invalid ID")
            input("Press Enter To Continue...")
    else:
        print("Invalid ID")
        input("Press Enter To Continue...")
    

def signup(arr, new_id, check):
    os.system('cls')
    print("\tSignup Page")
    print(f"\nYour ID (Autogenerated) -> {new_id}")
    password = input("\nEnter New Password: ")
    if(check == 0):
        arr.append(User(new_id, password))
    else:
        arr.append(Taxi(new_id, password))
    print("\nAccount Created Sucessfully!")
    input("\nPress Enter to Conitinue...")

def taxihome(currenttaxi):
    while(True):
        os.system('cls')
        ch = input("\n1.Taxi details\n2.Booking History\n3.Earning History\n4.Logout\n\nEnter Your Choice: ")
        if(ch == "1"):
            print("\nTaxi ID: {}\nCurrent Position: {}\nTotal Earnings: {}".format(currenttaxi.taxi_id, currenttaxi.currentposition, currenttaxi.earnings))
            input()
        elif(ch == "2"):
            currenttaxi.show_my_bookings("1")
        elif(ch == "3"):
            currenttaxi.show_my_bookings("0")
        elif(ch == "4"):
            break
        else:
            input("\nInvalid Choice\n\nPress Enter to continue...")


def userhome(currentuser):
    while(True):
        os.system('cls')
        ch = input("\n1.Book a Taxi\n2.Booking History\n3.Logout\n\nEnter Your Choice: ")
        if(ch == "1"):
            newbooking(currentuser)
        elif(ch == "2"):
            currentuser.show_my_bookings()
        elif(ch == "3"):
            break
        else:
            input("Invalid Choice\n\nPress Enter to Continue...")

def newbooking(currentuser):
    global new_book_id
    for i in range(6):
        print("{}. {}".format(i,chr(65+i)))
    pickpoint = int(input("\nEnter Pickup Point: "))
    droppoint = int(input("\nEnter Drop Point  : "))
    picktime  = int(input("\nEnter Pickup Time : "))
    short = 6
    taxiid = "-1"
    for i in taxis:
        # print(i.taxi_id,i.isawailable(picktime,pickpoint,droppoint),i.currentposition,i.last_tripcomplete_time)
        if(i.isawailable(picktime,pickpoint,droppoint)):
            if(abs(i.currentposition - pickpoint) < short):
                # print(i.taxi_id)
                taxiid = i
            if(abs(i.currentposition - pickpoint) == short):
                # print(i.taxi_id,taxiid,short)
                if(i.earnings < taxiid.earnings):
                    taxiid = i
            short =  abs(i.currentposition - pickpoint)
    if(taxiid != "-1" and short != 6):
        taxiid.currentposition = droppoint
        # print(taxiid.currentposition)
        taxiid.last_tripcomplete_time = picktime+abs(pickpoint - droppoint)
        # print(taxiid.last_tripcomplete_time)
        new_book_id = "B"+str(int(new_book_id[1:])+1)
        paid = (((abs(pickpoint - droppoint)*15) - 5) * 10) + 100
        books.append(Booking(new_book_id,currentuser.user_id,taxiid.taxi_id,droppoint,picktime,pickpoint,paid))
        print("\nYour Booking Confirmed!")
        print(f"\nYour Booking ID     -> {new_book_id}")
        print(f"Your Taxi ID        -> {taxiid.taxi_id}") 
        print(f"Total Trip distance -> {abs(pickpoint-droppoint) * 15}km")
        print(f"\t(from {chr(65+pickpoint)} to {chr(65+droppoint)})")
        print(f"Total Trip fair     -> Rs.{paid} ")

        input("\nPress Enter to Continue...")
        taxiid.earnings+=paid
        # self.currentposition = stopposition
        # self.last_tripcomple_time = pickuptime+abs(startposition-stopposition)
    else:
        print("\nNo Taxi Awailable At the moment\nTry by Changing Your Timings")
        input()

while(True):
    os.system('cls')
    print("\tWelcome!\3")
    ch = input("\n1.Cab Driver\n2.Customer\n3.Exit\n\nEnter Your Choice: ")
    if(ch == "1"):
        landing(1)
    elif(ch == "2"):
        landing(0)
    elif(ch == "3"):
        os.system('cls')
        print("\tThank You!\3")
        break
    else:
        input("\nInvalid Choice\n\nPress Enter to continue...")
